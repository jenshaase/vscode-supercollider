{
    "name": "vscode-supercollider",
    "displayName": "vscode-supercollider",
    "description": "Language Server Client for SuperCollider / sclang",
    "version": "0.0.3",
    "publisher": "ScottCarver",
    "homepage": "https://github.com/scztt/vscode-supercollider/blob/master/README.md",
    "license": "MIT",
    "engines": {
        "vscode": "^1.65.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/scztt/vscode-supercollider"
    },
    "activationEvents": [
        "onLanguage:supercollider",
        "workspaceContains:**/{*.sc,*.scd}"
    ],
    "main": "./out/extension.js",
    "icon": "icon.png",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "cp": "copyup src/commands/help/* out",
        "watch": "tsc -watch -p ./"
    },
    "contributes": {
        "configuration": [
            {
                "type": "object",
                "title": "SuperCollider Configuration",
                "properties": {
                    "supercollider.sclang.cmd": {
                        "type": "string",
                        "description": "Specifies the correct sclang command for your SuperCollider installation."
                    },
                    "supercollider.sclang.args": {
                        "type": "Array<string>",
                        "default": [],
                        "description": "Additional sclang command line args"
                    },
                    "supercollider.sclang.environment": {
                        "type": "object",
                        "default": {},
                        "description": "sclang environment variables"
                    },
                    "supercollider.sclang.confYaml": {
                        "type": "string",
                        "description": "Path to sclang_conf.yaml (leave blank to use the platform default path)"
                    },
                    "supercollider.sclang.loadWorkspaceConfYaml": {
                        "type": "boolean",
                        "default": true,
                        "description": "If a sclang_conf.yaml file is found in the current workspace, use this when launching sclang."
                    },
                    "supercollider.sclang.evaluateResultPrefix": {
                        "type": "string",
                        "default": "> ",
                        "description": "Format string for evaluated code result"
                    },
                    "supercollider.sclang.formatterCmd": {
                        "type": "string",
                        "default": "",
                        "descriotion": "Path to sclang-format executable"
                    },
                    "supercollider.sclang.postEvaluateResults": {
                        "type": "boolean",
                        "default": true,
                        "description": "Post the results of interpreted code"
                    },
                    "supercollider.sclang.autoAllocateServerPorts": {
                        "type": "boolean",
                        "default": false,
                        "description": "Automatically assign unique server ports for each sclang instance. This makes it easier to use multiple SuperCollider workspaces with their own Servers.\n\nNOTE: This will result in Servers that do not use the standard 57100 port!"
                    },
                    "supercollider.languageServerLogLevel": {
                        "type": "string",
                        "default": "error",
                        "enum": [
                            "all",
                            "debug",
                            "info",
                            "warning",
                            "error",
                            "off"
                        ],
                        "description": "Log level for sclang language server {info, debug, warning, error, critical, all}"
                    },
                    "supercollider.sclang.useGlobalStartupFile": {
                        "type": "boolean",
                        "default": true,
                        "description": "Use the global startup file (startup.scd) when starting sclang."
                    },
                    "supercollider.sclang.useWorkspaceStartupFile": {
                        "type": "boolean",
                        "default": true,
                        "description": "Use the workspace startup file (startup.scd) when starting sclang."
                    }
                }
            }
        ],
        "keybindings": [
            {
                "command": "supercollider.evaluateRegion",
                "key": "ctrl+return",
                "mac": "cmd+enter",
                "when": "editorLangId == 'supercollider'"
            },
            {
                "command": "supercollider.evaluateSelection",
                "key": "shift+enter",
                "when": "editorHasSelection && editorLangId == 'supercollider'"
            },
            {
                "command": "supercollider.evaluateLine",
                "key": "shift+enter",
                "when": "!editorHasSelection && editorLangId == 'supercollider'"
            },
            {
                "command": "supercollider.cmdPeriod",
                "key": "ctrl+.",
                "mac": "cmd+."
            }
        ],
        "commands": [
            {
                "command": "supercollider.updateLanguageServer",
                "title": "Update LanguageServer.quark to most recent supported version.",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.restart",
                "title": "Restart sclang",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.searchHelp",
                "title": "Search help",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.bootServer",
                "title": "Boot server",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.rebootServer",
                "title": "Reboot server",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.killAllServers",
                "title": "Kill all servers",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.showServerWindow",
                "title": "Show server window",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.showServerMeter",
                "title": "Show server meter",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.showScope",
                "title": "Show scope",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.showFreqscope",
                "title": "Show freqscope",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.dumpNodeTree",
                "title": "Dump node tree",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.dumpNodeTreeWithControls",
                "title": "Dump node tree with controls",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.showNodeTree",
                "title": "Show node tree",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.startRecording",
                "title": "Start recording",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.pauseRecording",
                "title": "Pause recording",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.stopRecording",
                "title": "Stop recording",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.cmdPeriod",
                "title": "Stop",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.evaluateSelection",
                "title": "Evaluate selection in sclang",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.evaluateRegion",
                "title": "Evaluate region in sclang",
                "category": "SuperCollider"
            },
            {
                "command": "supercollider.evaluateLine",
                "title": "Evaluate line in sclang",
                "category": "SuperCollider"
            }
        ],
        "languages": [
            {
                "id": "supercollider",
                "aliases": [
                    "SuperCollider",
                    "supercollider",
                    "sclang"
                ],
                "extensions": [
                    ".sc",
                    ".scd",
                    ".schelp"
                ],
                "configuration": "./language-configuration.json"
            },
            {
                "id": "supercollider-log",
                "aliases": [
                    "SuperCollider-log",
                    "supercollider-log"
                ],
                "extensions": [],
                "configuration": "./log-language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "supercollider",
                "scopeName": "source.supercollider",
                "path": "./syntaxes/supercollider.tmLanguage.json"
            },
            {
                "language": "supercollider-log",
                "scopeName": "source.supercollider-log",
                "path": "./syntaxes/supercollider-log.tmLanguage.json"
            }
        ]
    },
    "dependencies": {
        "@vscode/windows-registry": "^1.1.0",
        "vscode-languageclient": "^8.1.0"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.42",
        "@types/node": "^16.0.0",
        "@types/vscode": "^1.60.0",
        "copyfiles": "^2.4.1",
        "eslint": "^4.11.0",
        "tar": "^6.1.11",
        "typescript": "^4.4.3"
    }
}